(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{519:function(a,t,e){a.exports=e.p+"assets/img/aliyun.bbb79d61.png"},543:function(a,t,e){"use strict";e.r(t);var s=e(20),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"安装docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[a._v("#")]),a._v(" 安装docker")]),a._v(" "),t("h3",{attrs:{id:"卸载原先的docker环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#卸载原先的docker环境"}},[a._v("#")]),a._v(" 卸载原先的docker环境")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("yum remove "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n             docker-client "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n             docker-client-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n             docker-common "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n             docker-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n             docker-latest-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n             docker-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n             docker-engine \n")])])]),t("h3",{attrs:{id:"安装yum-utils"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装yum-utils"}},[a._v("#")]),a._v(" 安装yum-utils")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yum install -y yum-utils\n")])])]),t("h3",{attrs:{id:"安装-yum-config-manager"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-yum-config-manager"}},[a._v("#")]),a._v(" 安装 yum-config-manager")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n")])])]),t("h3",{attrs:{id:"安装-docker-engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker-engine"}},[a._v("#")]),a._v(" 安装 Docker Engine")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n")])])]),t("h3",{attrs:{id:"设置docker开机自启"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置docker开机自启"}},[a._v("#")]),a._v(" 设置Docker开机自启")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("systemctl enable docker\n")])])]),t("h3",{attrs:{id:"启动docker服务、关闭docker服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动docker服务、关闭docker服务"}},[a._v("#")]),a._v(" 启动Docker服务、关闭Docker服务")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("systemctl start docker ## 启动Docker\nsystemctl stop docker ## 关闭Docker\n")])])]),t("h3",{attrs:{id:"在控制台输入docker-v-出现版本号即安装成功"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在控制台输入docker-v-出现版本号即安装成功"}},[a._v("#")]),a._v(" 在控制台输入docker -v 出现版本号即安装成功")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker -v\n")])])]),t("h2",{attrs:{id:"设置阿里云镜像源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置阿里云镜像源"}},[a._v("#")]),a._v(" 设置阿里云镜像源")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://cr.console.aliyun.com",target:"_blank",rel:"noopener noreferrer"}},[a._v("啊里云镜像源"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"按提示操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按提示操作"}},[a._v("#")]),a._v(" 按提示操作")]),a._v(" "),t("p",[t("img",{attrs:{src:e(519),alt:"啊里云"}})]),a._v(" "),t("h2",{attrs:{id:"docker-compose安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose安装"}},[a._v("#")]),a._v(" Docker Compose安装")]),a._v(" "),t("h3",{attrs:{id:"安装curl-当然基本都自带"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装curl-当然基本都自带"}},[a._v("#")]),a._v(" 安装curl（当然基本都自带）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yum install curl\n")])])]),t("h3",{attrs:{id:"安装docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装docker-compose"}},[a._v("#")]),a._v(" 安装Docker Compose")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('curl -L "https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose-curl v-L"\n')])])]),t("h3",{attrs:{id:"添加执行权限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加执行权限"}},[a._v("#")]),a._v(" 添加执行权限")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("chmod +x /usr/local/bin/docker-compose\n")])])]),t("p",[a._v("在控制台输入docker-compose -v 出现版本号即安装成功")]),a._v(" "),t("h2",{attrs:{id:"docker安装nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker安装nginx"}},[a._v("#")]),a._v(" docker安装nginx")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("#直接安装nginx镜像运行nginx容器\n[root@localhost docker]# docker run -d -p 80:80 --name mynginx nginx\n#进入容器 复制文件到容器同上，不在累述\n#数据挂载  (把容器文件挂载到宿主机上面,不用每次进入容器内部修改文件，在容器外部宿主机修改文件会自动同步到容器内部，并且当删除容器后，宿主机上的文件不会被删除，相当于对容器内部文件进行持久化操作。)\n[root@localhost docker]# docker run -d -p 8033:80 -v /data/nginx/html:/usr/share/nginx/html --name mynginx nginx\n#在/data/nginx/html目录下创建test.html\n[root@localhost html]# vim test.html\n#测试成功\n[root@localhost html]# curl localhost:8033/test.html\n--------------------------------------------------------------------------------------\n[root@localhost docker]# docker run -dit -p 8081:80 -v /data/nginx/conf:/etc/nginx -v /data/nginx/log:/var/log/nginx -v /data/nginx/html:/usr/share/nginx/html --name nginx1 nginx /bin/bash\n# 说明：当挂载容器内安装软件配置目录容易出现很多问题，比如：1.后台启动即退出 2.成功启动后无法正常访问\n[root@VM_0_5_centos conf]# curl localhost:8081\ncurl: (56) Recv failure: Connection reset by peer\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);